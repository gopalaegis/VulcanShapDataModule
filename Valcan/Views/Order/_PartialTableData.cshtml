@model IEnumerable<Valcan.Models.OrderViewModel>


<div>
    <b>Total Order (INR): </b> <label id="lbltotal" style="color:red;"></label>
</div>
<br />
<br />

<table id="dataTable" class="display responsive nowrap" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Sales_Doc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Item)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sch_Line)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sold_to_pt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sold_to_party)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Material)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order_Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Open_Qty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Req_dlv_dt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Week_Changed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Remarks_from_Production)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Unit_Basic_Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Curr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Total_Price_IRS)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Purchase_order_no)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PO_date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created_on)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KEYMANAGER)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pre_Dispatch_Inspection)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Dv)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IncoT)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Inco_2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Material_group_2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer_group_5)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Material_group_1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Remarks_from_Marketing)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Marketing_Sales_Week)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MRP_Controller)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cust_Req_Week)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cust_Req_Yar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Your_Ref)
            </th>*@
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelitem => item.Sales_Doc)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Item)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Sch_Line)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Sold_to_pt)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Sold_to_party)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Material)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Order_Qty)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Open_Qty)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.strReq_dlv_dt)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Week_Changed)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Remarks_from_Production)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Unit_Basic_Price)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Curr)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Total_Price_IRS)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Purchase_order_no)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.strPO_date)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.strCreated_on)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.KEYMANAGER)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Pre_Dispatch_Inspection)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Dv)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.IncoT)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Inco_2)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Material_group_2)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Customer_group_5)
            </td>

            @*<td>
                @Html.DisplayFor(modelitem => item.Material_group_1)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Remarks_from_Marketing)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Marketing_Sales_Week)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.MRP_Controller)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Cust_Req_Week)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Cust_Req_Yar)
            </td>
            <td>
                @Html.DisplayFor(modelitem => item.Your_Ref)
            </td>*@

        </tr>
        }
    </tbody>

</table>


<script>


    if (!$.fn.DataTable.isDataTable('#dataTable')) {
        $('#dataTable').dataTable({
            bSort: false,
            dom: 'Bfplrti', //'Blfrtip',
            sScrollX: true,
            sScrollY: true,
            lengthMenu: [
                [10, 25, 50, -1],
                [10, 25, 50, 'All'],
            ],
            buttons: [{
                extend: 'excelHtml5',
                text: 'Export to Excel',
                autoFilter: true,
                sheetName: 'Exported data'
            }],
            columnDefs: [
                {
                    targets: [12],
                    render: function (data, type, row, meta) {
                        return parseInt(data).toLocaleString('en-US');
                    }
                },
                {
                    targets: [14],
                    render: function (data, type, row, meta) {
                        return parseInt(data).toLocaleString('en-US');
                    }
                }
            ],
            //drawCallback: () => {
            //    const table = $('#dataTable').DataTable();
            //    const tableData = table.rows({
            //        search: 'applied'
            //    }).data().toArray();
            //    const totals = tableData.reduce((total, rowData) => {
            //        total[0] += parseFloat(rowData[10]);
            //        total[1] += parseFloat(rowData[11]);
            //        return total;
            //        alert(total);
            //    }, [0, 0]);
            //    $(table.column(10).footer()).text(totals[0]);
            //    $(table.column(11).footer()).text(totals[1]);
            //}
            footerCallback: function (row, data, start, end, display) {
                debugger;
                var api = this.api();

                pageTotal = api
                    .column(14, { search: 'applied' })
                    .data()
                    .reduce(function (a, b) {
                        return parseFloat(a) + parseFloat(b);
                    }, 0);
                var offerValTotal = addCommas(parseInt(pageTotal))
                $("#lbltotal").html(offerValTotal);
            }
        });
    }
    $('body').find('.dataTables_scroll').wrap('<div id="scroll_div"></div>');
    $('#scroll_div').doubleScroll();
</script>


