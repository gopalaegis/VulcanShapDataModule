@model IEnumerable<Valcan.Models.SummaryViewModel>

@{
    ViewBag.Title = "Summary";
}
<style>
    /* #dataTable{
        font-size:10px;
    }
    .dataTables_scrollHeadInner {
        font-size: 10px;
    }*/
    #dataTable_wrapper {
        font-size: 10px;
    }

    #dataTable2_wrapper {
        font-size: 10px;
    }
    /*.leftside-menu {
        width: auto;
    }*/
    .dataTables_scrollBody {
        overflow-x: initial !important;
        overflow-y: visible !important;
    }

    .dataTables_scrollHead {
        overflow: visible !important;
    }

    .doubleScroll-scroll-wrapper {
        overflow-y: scroll !important;
        height: 16px !important;
        width: inherit !important;
    }

    .doubleScroll-scroll {
        height: 20px !important;
        width: 145% !important;
    }
</style>
<link href="~/Scripts/JQueryDataTable/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Scripts/JQueryDataTable/responsive.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.dataTables.min.css" rel="stylesheet" />

<div class="row" id="partialTableData">
    @Html.Partial("_PartialTableData", Model)
</div>
<div class="modal" id="myModal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" style="width:auto;height:auto; max-width: 100%;">
        <div class="modal-content" style="width: auto; height: auto; max-width: 100%;">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Customer details</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <div class="login_form">
                    <div class="form-group">
                        <div class="row" id="partialCustomerData">
                            @Html.Partial("_PartialCustomerData", Model)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @*<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
        <script src=" https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>*@

    <script src="~/Scripts/JQueryDataTable/1.13.4/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/JQueryDataTable/1.13.4/dataTables.buttons.min.js"></script>
    <script src="~/Scripts/JQueryDataTable/1.13.4/jszip.min.js"></script>
    <script src="~/Scripts/JQueryDataTable/1.13.4/buttons.html5.min.js"></script>
    <script src="~/Scripts/jquery.doubleScroll.min.js"></script>
    <script>
        var table;
        $(document).ready(function () {
            $('#dataTable').DataTable({
                bSort: false,
                dom: 'Bfplrti', //'Blfrtip',
                sScrollX: true,
                sScrollY: true,
                pageLength: 15,
                lengthMenu: [
                    [10, 25, 50, -1],
                    [10, 25, 50, 'All'],
                ],
                buttons: [{
                    extend: 'excelHtml5',
                    text: 'Export to Excel',
                    autoFilter: true,
                    sheetName: 'Exported data'
                }],
                columnDefs: [
                    {
                        targets: [1],
                        render: function (data, type, row, meta) {
                            return parseInt(data).toLocaleString('en-US');
                        }
                    },
                    {
                        targets: [2],
                        render: function (data, type, row, meta) {
                            return parseInt(data).toLocaleString('en-US');
                        }
                    },
                    {
                        targets: [3],
                        render: function (data, type, row, meta) {
                            return parseInt(data).toLocaleString('en-US');
                        }
                    }
                ],
                footerCallback: function (row, data, start, end, display) {
                    debugger;
                    var api = this.api();
                    pageTotal = api
                        .column(1, { search: 'applied' })
                        .data()
                        .reduce(function (a, b) {
                            return parseFloat(a) + parseFloat(b);
                        }, 0);

                    pageTotal2 = api
                        .column(2, { search: 'applied' })
                        .data()
                        .reduce(function (a, b) {
                            return parseFloat(a) + parseFloat(b);
                        }, 0);

                    pageTotal3 = api
                        .column(3, { search: 'applied' })
                        .data()
                        .reduce(function (a, b) {
                            return parseFloat(a) + parseFloat(b);
                        }, 0);
                    // Update footer
                    var orderintakeTotal = addCommas(parseInt(pageTotal))
                    var salesTot = addCommas(parseInt(pageTotal2))
                    var openorderTot = addCommas(parseInt(pageTotal3))
                    $("#lbltotal1").html(orderintakeTotal);
                    $("#lbltotal2").html(salesTot);
                    $("#lbltotal3").html(openorderTot);
                    //$(api.column(1).footer()).html('$' + pageTotal + ' ( $' + total + ' total)');
                    //$(api.column(2).footer()).html('$' + pageTotal2 + ' ( $' + total2 + ' total)');
                }
            });
            $('#dataTable2').DataTable({
                bSort: false,
                dom: 'Bfplrti', //'Blfrtip',
                sScrollX: true,
                sScrollY: true,
                lengthMenu: [
                    [10, 25, 50, -1],
                    [10, 25, 50, 'All'],
                ],
                buttons: [{
                    extend: 'excelHtml5',
                    text: 'Export to Excel',
                    autoFilter: true,
                    sheetName: 'Exported data'
                }],

            });
            $('#dataTable2').DataTable().columns.adjust();
            $('body').find('.dataTables_scroll').wrap('<div id="scroll_div"></div>');
            $('#scroll_div').doubleScroll();
        });

        $("#Summaryfiltershow").on("click", function () {
            if ($("#summaryfiltersection").is(":hidden")) {
                $("#summaryfiltersection").show();
            }
            else {
                $("#summaryfiltersection").hide();
            }

        });
        $("#SummarySearchClear").on("click", function () {
            $("#txtSCustName").val('');
            $('#ddlSCustName')[0].selectedIndex = 0;
            $("#txtSCustCode").val('');
            $('#ddlSCustCode')[0].selectedIndex = 0;
            $("#txtSKeyManager").val('');
            $('#ddlSKeyManager')[0].selectedIndex = 0;
            $("#txtSDivision").val('');
            $('#ddlSDivision')[0].selectedIndex = 0;
            $("#txtSMonths").val('');
            $('#ddlSMonths')[0].selectedIndex = 0;
        });
        $(".left-filter").hide();
        $(".left-filter1").hide();
        $(".left-filter2").show();

        $("#SummarySearch").click(function () {
            var txtSCustName = $("#txtSCustName").val();
            var ddlSCustName = $('#ddlSCustName').find(":selected").val();
            var txtSCustCode = $("#txtSCustCode").val();
            var ddlSCustCode = $('#ddlSCustCode').find(":selected").val();
            var txtSKeyManager = $("#txtSKeyManager").val();
            var ddlSKeyManager = $('#ddlSKeyManager').find(":selected").val();
            var txtSDivision = $("#txtSDivision").val();
            var ddlSDivision = $('#ddlSDivision').find(":selected").val();
            var txtSMonths = $("#txtSMonths").val();
            var ddlSMonths = $('#ddlSMonths').find(":selected").val();

            var dataToSend = {
                SCustName: txtSCustName,
                SCustNameddl: ddlSCustName,
                SCustCode: txtSCustCode,
                SCustCodeddl: ddlSCustCode,
                SKeyManager: txtSKeyManager,
                SKeyManagerddl: ddlSKeyManager,
                SDivision: txtSDivision,
                SDivisionddl: ddlSDivision,
                SMonths: txtSMonths,
                SMonthsddl: ddlSMonths,
            };

            $.ajax({
                        url: "@Url.Action("SearchFilter", "Summary")",
                        data: dataToSend,
                        type: "POST",
                        error: function (xmlHttpRequest, errorText, thrownError)
                        {
                            //alert(xmlHttpRequest + "|" + errorText + "|" + thrownError);
                        },
                        success: function (data)
                        {
                            $("#partialTableData").html(data);
                        }
                    });
        });

        function getDetails(id,name) {
           var dataToSend = {
               KAMId: id,
               KAMName: name
            };

            $.ajax({
                url: "@Url.Action("GetCustomerDetailsbyKeyManager", "Summary")",
                data: dataToSend,
                type: "POST",
                beforeSend: function () {
                    $("#ajax-loader").show();
                },
                error: function (xmlHttpRequest, errorText, thrownError) {
                    //alert(xmlHttpRequest + "|" + errorText + "|" + thrownError);
                },
                success: function (data) {
                    $("#partialCustomerData").html(data);
                    $('#dataTable2').DataTable().columns.adjust();
                    $("#myModal").modal('show');
                },
                complete: function () {
                    $("#ajax-loader").hide();
                }
            });
        }
        $('#myModal').on('shown.bs.modal', function (e) {
            debugger;
            $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
        });
        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;

        }
    </script>
}


