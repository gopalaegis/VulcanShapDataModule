@model DocumentManagement.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "Change Password";
}
@Html.Partial("_Notification")
<div class="col-xl-12">
    <div class="game_show" id="create-user">
        <div class="row justify-content-center">
            <div class="col-xl-6 col-md-7 col-lg-7">
                @using (Html.BeginForm("ChangePassword", "Home", new { }, FormMethod.Post, new { @class = "login_form" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label>Old Password</label>
                        <div style="display: flex;">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control valid", placeholder = "• • • • • • • • •" } })
                            <span class="input-group-append">
                                <div class="input-group-text bg-transparent" style="height:40px;">
                                    <i class="fa fa-eye-slash" id="togglePassword"></i>
                                </div>
                            </span>
                        </div>
                        @*@Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control valid", placeholder = "• • • • • • • • •" } })*@
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        <label>New Password  <abbr class="required mx-2" title="required"><i class="fa fa-info-circle"></i></abbr></label>

                        <div style="display: flex;">
                            @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control valid", placeholder = "• • • • • • • • •" } })
                            <span class="input-group-append">
                                <div class="input-group-text bg-transparent" style="height:40px;">
                                    <i class="fa fa-eye-slash" id="togglePassword2"></i>
                                </div>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        <label>Re-enter Password</label>

                        <div style="display: flex;">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control valid", placeholder = "• • • • • • • • •" } })
                            <span class="input-group-append">
                                <div class="input-group-text bg-transparent" style="height:40px;">
                                    <i class="fa fa-eye-slash" id="togglePassword3"></i>
                                </div>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

                    </div>

                    <div class="submit-box mt-2">
                        <button type="submit" class="btn submit-btn">Change Password</button>
                    </div>

                }


            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        const togglePassword = document.querySelector("#togglePassword");
        const togglePassword2 = document.querySelector("#togglePassword2");
        const togglePassword3 = document.querySelector("#togglePassword3");
        const password = document.querySelector("#password");
        const password2 = document.querySelector("#NewPassword");
        const password3 = document.querySelector("#ConfirmPassword");

        togglePassword.addEventListener("click", function () {
            // toggle the type attribute
            const type = password.getAttribute("type") === "password" ? "text" : "password";
            password.setAttribute("type", type);

            // toggle the icon
            $(this).toggleClass("fa-eye fa-eye-slash");
        });
        togglePassword2.addEventListener("click", function () {
            // toggle the type attribute
            const type = password2.getAttribute("type") === "password" ? "text" : "password";
            password2.setAttribute("type", type);

            // toggle the icon
            $(this).toggleClass("fa-eye fa-eye-slash");
        });
        togglePassword3.addEventListener("click", function () {
            // toggle the type attribute
            const type = password3.getAttribute("type") === "password" ? "text" : "password";
            password3.setAttribute("type", type);

            // toggle the icon
            $(this).toggleClass("fa-eye fa-eye-slash");
        });
    </script>
}




